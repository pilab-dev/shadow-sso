name: Publish v1 Image to GHCR

on:
  push:
    branches:
      - v1

jobs:
  build-and-push-image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write # Required to push to GHCR

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.4' # Ensure this matches go.mod

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ghcr.io/pilab-dev/shadow-sso-backend:v1 # Tag for v1 branch
          # You might want to add more tags, e.g., ghcr.io/pilab-dev/shadow-sso-backend:latest if v1 is also your latest stable
          # or ghcr.io/pilab-dev/shadow-sso-backend:${{ github.sha }} for a commit-specific tag
          # For simplicity, starting with just 'v1'
          cache-from: type=gha
          cache-to: type=gha,mode=max
        env:
          # Ensure buildkit is used
          DOCKER_BUILDKIT: 1
# You might want to add a step here to create a GitHub release or tag if this push to v1 signifies a release.
# For example:
# - name: Create Release
#   id: create_release
#   uses: actions/create-release@v1
#   env:
#     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#   with:
#     tag_name: v1.0.${{ github.run_number }} # Example dynamic tag
#     release_name: Release v1.0.${{ github.run_number }}
#     draft: false
#     prerelease: false
