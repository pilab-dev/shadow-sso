// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: proto/dts/v1/dts.proto

package dtsv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// --- Generic Messages ---
type SetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bucket string               `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Key    string               `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	Value  []byte               `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
	Ttl    *durationpb.Duration `protobuf:"bytes,4,opt,name=ttl,proto3" json:"ttl,omitempty"` // Optional: Time to live for this key
}

func (x *SetRequest) Reset() {
	*x = SetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dts_v1_dts_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRequest) ProtoMessage() {}

func (x *SetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dts_v1_dts_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRequest.ProtoReflect.Descriptor instead.
func (*SetRequest) Descriptor() ([]byte, []int) {
	return file_proto_dts_v1_dts_proto_rawDescGZIP(), []int{0}
}

func (x *SetRequest) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *SetRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SetRequest) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *SetRequest) GetTtl() *durationpb.Duration {
	if x != nil {
		return x.Ttl
	}
	return nil
}

type GetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bucket string `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Key    string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *GetRequest) Reset() {
	*x = GetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dts_v1_dts_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRequest) ProtoMessage() {}

func (x *GetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dts_v1_dts_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRequest.ProtoReflect.Descriptor instead.
func (*GetRequest) Descriptor() ([]byte, []int) {
	return file_proto_dts_v1_dts_proto_rawDescGZIP(), []int{1}
}

func (x *GetRequest) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *GetRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type GetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value     []byte                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Found     bool                   `protobuf:"varint,2,opt,name=found,proto3" json:"found,omitempty"`
	ExpiresAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"` // If TTL was set
}

func (x *GetResponse) Reset() {
	*x = GetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dts_v1_dts_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetResponse) ProtoMessage() {}

func (x *GetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dts_v1_dts_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetResponse.ProtoReflect.Descriptor instead.
func (*GetResponse) Descriptor() ([]byte, []int) {
	return file_proto_dts_v1_dts_proto_rawDescGZIP(), []int{2}
}

func (x *GetResponse) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *GetResponse) GetFound() bool {
	if x != nil {
		return x.Found
	}
	return false
}

func (x *GetResponse) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

type DeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bucket string `protobuf:"bytes,1,opt,name=bucket,proto3" json:"bucket,omitempty"`
	Key    string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *DeleteRequest) Reset() {
	*x = DeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dts_v1_dts_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRequest) ProtoMessage() {}

func (x *DeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dts_v1_dts_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRequest.ProtoReflect.Descriptor instead.
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return file_proto_dts_v1_dts_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteRequest) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *DeleteRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type AuthCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code                string                 `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	ClientId            string                 `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	UserId              string                 `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	RedirectUri         string                 `protobuf:"bytes,4,opt,name=redirect_uri,json=redirectUri,proto3" json:"redirect_uri,omitempty"`
	Scope               string                 `protobuf:"bytes,5,opt,name=scope,proto3" json:"scope,omitempty"`
	CodeChallenge       string                 `protobuf:"bytes,6,opt,name=code_challenge,json=codeChallenge,proto3" json:"code_challenge,omitempty"`
	CodeChallengeMethod string                 `protobuf:"bytes,7,opt,name=code_challenge_method,json=codeChallengeMethod,proto3" json:"code_challenge_method,omitempty"`
	ExpiresAt           *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	SessionId           string                 `protobuf:"bytes,9,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Claims              string                 `protobuf:"bytes,10,opt,name=claims,proto3" json:"claims,omitempty"`                                // JSON string for claims
	AuthTimeIat         string                 `protobuf:"bytes,11,opt,name=auth_time_iat,json=authTimeIat,proto3" json:"auth_time_iat,omitempty"` // Added from domain.AuthCodeData
}

func (x *AuthCode) Reset() {
	*x = AuthCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dts_v1_dts_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthCode) ProtoMessage() {}

func (x *AuthCode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dts_v1_dts_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthCode.ProtoReflect.Descriptor instead.
func (*AuthCode) Descriptor() ([]byte, []int) {
	return file_proto_dts_v1_dts_proto_rawDescGZIP(), []int{4}
}

func (x *AuthCode) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AuthCode) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *AuthCode) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AuthCode) GetRedirectUri() string {
	if x != nil {
		return x.RedirectUri
	}
	return ""
}

func (x *AuthCode) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *AuthCode) GetCodeChallenge() string {
	if x != nil {
		return x.CodeChallenge
	}
	return ""
}

func (x *AuthCode) GetCodeChallengeMethod() string {
	if x != nil {
		return x.CodeChallengeMethod
	}
	return ""
}

func (x *AuthCode) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *AuthCode) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *AuthCode) GetClaims() string {
	if x != nil {
		return x.Claims
	}
	return ""
}

func (x *AuthCode) GetAuthTimeIat() string {
	if x != nil {
		return x.AuthTimeIat
	}
	return ""
}

type StoreAuthCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthCode *AuthCode `protobuf:"bytes,1,opt,name=auth_code,json=authCode,proto3" json:"auth_code,omitempty"`
}

func (x *StoreAuthCodeRequest) Reset() {
	*x = StoreAuthCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dts_v1_dts_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreAuthCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreAuthCodeRequest) ProtoMessage() {}

func (x *StoreAuthCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dts_v1_dts_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreAuthCodeRequest.ProtoReflect.Descriptor instead.
func (*StoreAuthCodeRequest) Descriptor() ([]byte, []int) {
	return file_proto_dts_v1_dts_proto_rawDescGZIP(), []int{5}
}

func (x *StoreAuthCodeRequest) GetAuthCode() *AuthCode {
	if x != nil {
		return x.AuthCode
	}
	return nil
}

type GetAuthCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *GetAuthCodeRequest) Reset() {
	*x = GetAuthCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dts_v1_dts_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAuthCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAuthCodeRequest) ProtoMessage() {}

func (x *GetAuthCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dts_v1_dts_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAuthCodeRequest.ProtoReflect.Descriptor instead.
func (*GetAuthCodeRequest) Descriptor() ([]byte, []int) {
	return file_proto_dts_v1_dts_proto_rawDescGZIP(), []int{6}
}

func (x *GetAuthCodeRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type DeleteAuthCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *DeleteAuthCodeRequest) Reset() {
	*x = DeleteAuthCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dts_v1_dts_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAuthCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAuthCodeRequest) ProtoMessage() {}

func (x *DeleteAuthCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dts_v1_dts_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAuthCodeRequest.ProtoReflect.Descriptor instead.
func (*DeleteAuthCodeRequest) Descriptor() ([]byte, []int) {
	return file_proto_dts_v1_dts_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteAuthCodeRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type RefreshToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token     string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	ClientId  string                 `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	UserId    string                 `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Scope     string                 `protobuf:"bytes,4,opt,name=scope,proto3" json:"scope,omitempty"`
	ExpiresAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	SessionId string                 `protobuf:"bytes,6,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"` // Added from domain.RefreshTokenData
	Claims    string                 `protobuf:"bytes,7,opt,name=claims,proto3" json:"claims,omitempty"`                        // JSON string for claims // Added from domain.RefreshTokenData
}

func (x *RefreshToken) Reset() {
	*x = RefreshToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dts_v1_dts_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshToken) ProtoMessage() {}

func (x *RefreshToken) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dts_v1_dts_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshToken.ProtoReflect.Descriptor instead.
func (*RefreshToken) Descriptor() ([]byte, []int) {
	return file_proto_dts_v1_dts_proto_rawDescGZIP(), []int{8}
}

func (x *RefreshToken) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *RefreshToken) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *RefreshToken) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *RefreshToken) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *RefreshToken) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *RefreshToken) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *RefreshToken) GetClaims() string {
	if x != nil {
		return x.Claims
	}
	return ""
}

type StoreRefreshTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefreshToken *RefreshToken `protobuf:"bytes,1,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
}

func (x *StoreRefreshTokenRequest) Reset() {
	*x = StoreRefreshTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dts_v1_dts_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreRefreshTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreRefreshTokenRequest) ProtoMessage() {}

func (x *StoreRefreshTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dts_v1_dts_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreRefreshTokenRequest.ProtoReflect.Descriptor instead.
func (*StoreRefreshTokenRequest) Descriptor() ([]byte, []int) {
	return file_proto_dts_v1_dts_proto_rawDescGZIP(), []int{9}
}

func (x *StoreRefreshTokenRequest) GetRefreshToken() *RefreshToken {
	if x != nil {
		return x.RefreshToken
	}
	return nil
}

type GetRefreshTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *GetRefreshTokenRequest) Reset() {
	*x = GetRefreshTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dts_v1_dts_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRefreshTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRefreshTokenRequest) ProtoMessage() {}

func (x *GetRefreshTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dts_v1_dts_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRefreshTokenRequest.ProtoReflect.Descriptor instead.
func (*GetRefreshTokenRequest) Descriptor() ([]byte, []int) {
	return file_proto_dts_v1_dts_proto_rawDescGZIP(), []int{10}
}

func (x *GetRefreshTokenRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type DeleteRefreshTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *DeleteRefreshTokenRequest) Reset() {
	*x = DeleteRefreshTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dts_v1_dts_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteRefreshTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRefreshTokenRequest) ProtoMessage() {}

func (x *DeleteRefreshTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dts_v1_dts_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRefreshTokenRequest.ProtoReflect.Descriptor instead.
func (*DeleteRefreshTokenRequest) Descriptor() ([]byte, []int) {
	return file_proto_dts_v1_dts_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteRefreshTokenRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type AccessTokenMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenHash string                 `protobuf:"bytes,1,opt,name=token_hash,json=tokenHash,proto3" json:"token_hash,omitempty"`
	ClientId  string                 `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	UserId    string                 `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Scope     string                 `protobuf:"bytes,4,opt,name=scope,proto3" json:"scope,omitempty"`
	ExpiresAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	Active    bool                   `protobuf:"varint,6,opt,name=active,proto3" json:"active,omitempty"`
	SessionId string                 `protobuf:"bytes,7,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"` // Added from domain.TokenIntrospection
	TokenType string                 `protobuf:"bytes,8,opt,name=token_type,json=tokenType,proto3" json:"token_type,omitempty"` // Added from domain.TokenIntrospection (e.g. "Bearer")
	Claims    string                 `protobuf:"bytes,9,opt,name=claims,proto3" json:"claims,omitempty"`                        // JSON string for claims // Added from domain.TokenIntrospection
}

func (x *AccessTokenMetadata) Reset() {
	*x = AccessTokenMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dts_v1_dts_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessTokenMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessTokenMetadata) ProtoMessage() {}

func (x *AccessTokenMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dts_v1_dts_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessTokenMetadata.ProtoReflect.Descriptor instead.
func (*AccessTokenMetadata) Descriptor() ([]byte, []int) {
	return file_proto_dts_v1_dts_proto_rawDescGZIP(), []int{12}
}

func (x *AccessTokenMetadata) GetTokenHash() string {
	if x != nil {
		return x.TokenHash
	}
	return ""
}

func (x *AccessTokenMetadata) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *AccessTokenMetadata) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *AccessTokenMetadata) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *AccessTokenMetadata) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *AccessTokenMetadata) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *AccessTokenMetadata) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *AccessTokenMetadata) GetTokenType() string {
	if x != nil {
		return x.TokenType
	}
	return ""
}

func (x *AccessTokenMetadata) GetClaims() string {
	if x != nil {
		return x.Claims
	}
	return ""
}

type StoreAccessTokenMetadataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessTokenMetadata *AccessTokenMetadata `protobuf:"bytes,1,opt,name=access_token_metadata,json=accessTokenMetadata,proto3" json:"access_token_metadata,omitempty"`
}

func (x *StoreAccessTokenMetadataRequest) Reset() {
	*x = StoreAccessTokenMetadataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dts_v1_dts_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreAccessTokenMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreAccessTokenMetadataRequest) ProtoMessage() {}

func (x *StoreAccessTokenMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dts_v1_dts_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreAccessTokenMetadataRequest.ProtoReflect.Descriptor instead.
func (*StoreAccessTokenMetadataRequest) Descriptor() ([]byte, []int) {
	return file_proto_dts_v1_dts_proto_rawDescGZIP(), []int{13}
}

func (x *StoreAccessTokenMetadataRequest) GetAccessTokenMetadata() *AccessTokenMetadata {
	if x != nil {
		return x.AccessTokenMetadata
	}
	return nil
}

type GetAccessTokenMetadataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenHash string `protobuf:"bytes,1,opt,name=token_hash,json=tokenHash,proto3" json:"token_hash,omitempty"`
}

func (x *GetAccessTokenMetadataRequest) Reset() {
	*x = GetAccessTokenMetadataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dts_v1_dts_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccessTokenMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccessTokenMetadataRequest) ProtoMessage() {}

func (x *GetAccessTokenMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dts_v1_dts_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccessTokenMetadataRequest.ProtoReflect.Descriptor instead.
func (*GetAccessTokenMetadataRequest) Descriptor() ([]byte, []int) {
	return file_proto_dts_v1_dts_proto_rawDescGZIP(), []int{14}
}

func (x *GetAccessTokenMetadataRequest) GetTokenHash() string {
	if x != nil {
		return x.TokenHash
	}
	return ""
}

type DeleteAccessTokenMetadataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenHash string `protobuf:"bytes,1,opt,name=token_hash,json=tokenHash,proto3" json:"token_hash,omitempty"`
}

func (x *DeleteAccessTokenMetadataRequest) Reset() {
	*x = DeleteAccessTokenMetadataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dts_v1_dts_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAccessTokenMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAccessTokenMetadataRequest) ProtoMessage() {}

func (x *DeleteAccessTokenMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dts_v1_dts_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAccessTokenMetadataRequest.ProtoReflect.Descriptor instead.
func (*DeleteAccessTokenMetadataRequest) Descriptor() ([]byte, []int) {
	return file_proto_dts_v1_dts_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteAccessTokenMetadataRequest) GetTokenHash() string {
	if x != nil {
		return x.TokenHash
	}
	return ""
}

type OIDCFlw struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlowId              string                 `protobuf:"bytes,1,opt,name=flow_id,json=flowId,proto3" json:"flow_id,omitempty"`
	ClientId            string                 `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	RedirectUri         string                 `protobuf:"bytes,3,opt,name=redirect_uri,json=redirectUri,proto3" json:"redirect_uri,omitempty"`
	Scope               string                 `protobuf:"bytes,4,opt,name=scope,proto3" json:"scope,omitempty"`
	State               string                 `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`
	Nonce               string                 `protobuf:"bytes,6,opt,name=nonce,proto3" json:"nonce,omitempty"`
	CodeChallenge       string                 `protobuf:"bytes,7,opt,name=code_challenge,json=codeChallenge,proto3" json:"code_challenge,omitempty"`
	CodeChallengeMethod string                 `protobuf:"bytes,8,opt,name=code_challenge_method,json=codeChallengeMethod,proto3" json:"code_challenge_method,omitempty"`
	ExpiresAt           *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	UserId              string                 `protobuf:"bytes,10,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	UserAuthenticatedAt *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=user_authenticated_at,json=userAuthenticatedAt,proto3" json:"user_authenticated_at,omitempty"`
	OriginalOidcParams  map[string]string      `protobuf:"bytes,12,rep,name=original_oidc_params,json=originalOidcParams,proto3" json:"original_oidc_params,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	AcrLevel            string                 `protobuf:"bytes,13,opt,name=acr_level,json=acrLevel,proto3" json:"acr_level,omitempty"`       // Added from oidcflow.LoginFlow
	AmrMethods          string                 `protobuf:"bytes,14,opt,name=amr_methods,json=amrMethods,proto3" json:"amr_methods,omitempty"` // Added from oidcflow.LoginFlow (could be a repeated string if needed)
	SessionId           string                 `protobuf:"bytes,15,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`    // Added from oidcflow.LoginFlow
}

func (x *OIDCFlw) Reset() {
	*x = OIDCFlw{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dts_v1_dts_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OIDCFlw) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OIDCFlw) ProtoMessage() {}

func (x *OIDCFlw) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dts_v1_dts_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OIDCFlw.ProtoReflect.Descriptor instead.
func (*OIDCFlw) Descriptor() ([]byte, []int) {
	return file_proto_dts_v1_dts_proto_rawDescGZIP(), []int{16}
}

func (x *OIDCFlw) GetFlowId() string {
	if x != nil {
		return x.FlowId
	}
	return ""
}

func (x *OIDCFlw) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *OIDCFlw) GetRedirectUri() string {
	if x != nil {
		return x.RedirectUri
	}
	return ""
}

func (x *OIDCFlw) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *OIDCFlw) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *OIDCFlw) GetNonce() string {
	if x != nil {
		return x.Nonce
	}
	return ""
}

func (x *OIDCFlw) GetCodeChallenge() string {
	if x != nil {
		return x.CodeChallenge
	}
	return ""
}

func (x *OIDCFlw) GetCodeChallengeMethod() string {
	if x != nil {
		return x.CodeChallengeMethod
	}
	return ""
}

func (x *OIDCFlw) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *OIDCFlw) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *OIDCFlw) GetUserAuthenticatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UserAuthenticatedAt
	}
	return nil
}

func (x *OIDCFlw) GetOriginalOidcParams() map[string]string {
	if x != nil {
		return x.OriginalOidcParams
	}
	return nil
}

func (x *OIDCFlw) GetAcrLevel() string {
	if x != nil {
		return x.AcrLevel
	}
	return ""
}

func (x *OIDCFlw) GetAmrMethods() string {
	if x != nil {
		return x.AmrMethods
	}
	return ""
}

func (x *OIDCFlw) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type StoreOIDCFlwRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OidcFlow *OIDCFlw `protobuf:"bytes,1,opt,name=oidc_flow,json=oidcFlow,proto3" json:"oidc_flow,omitempty"`
}

func (x *StoreOIDCFlwRequest) Reset() {
	*x = StoreOIDCFlwRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dts_v1_dts_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreOIDCFlwRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreOIDCFlwRequest) ProtoMessage() {}

func (x *StoreOIDCFlwRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dts_v1_dts_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreOIDCFlwRequest.ProtoReflect.Descriptor instead.
func (*StoreOIDCFlwRequest) Descriptor() ([]byte, []int) {
	return file_proto_dts_v1_dts_proto_rawDescGZIP(), []int{17}
}

func (x *StoreOIDCFlwRequest) GetOidcFlow() *OIDCFlw {
	if x != nil {
		return x.OidcFlow
	}
	return nil
}

type GetOIDCFlwRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlowId string `protobuf:"bytes,1,opt,name=flow_id,json=flowId,proto3" json:"flow_id,omitempty"`
}

func (x *GetOIDCFlwRequest) Reset() {
	*x = GetOIDCFlwRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dts_v1_dts_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOIDCFlwRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOIDCFlwRequest) ProtoMessage() {}

func (x *GetOIDCFlwRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dts_v1_dts_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOIDCFlwRequest.ProtoReflect.Descriptor instead.
func (*GetOIDCFlwRequest) Descriptor() ([]byte, []int) {
	return file_proto_dts_v1_dts_proto_rawDescGZIP(), []int{18}
}

func (x *GetOIDCFlwRequest) GetFlowId() string {
	if x != nil {
		return x.FlowId
	}
	return ""
}

type DeleteOIDCFlwRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FlowId string `protobuf:"bytes,1,opt,name=flow_id,json=flowId,proto3" json:"flow_id,omitempty"`
}

func (x *DeleteOIDCFlwRequest) Reset() {
	*x = DeleteOIDCFlwRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dts_v1_dts_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOIDCFlwRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOIDCFlwRequest) ProtoMessage() {}

func (x *DeleteOIDCFlwRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dts_v1_dts_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOIDCFlwRequest.ProtoReflect.Descriptor instead.
func (*DeleteOIDCFlwRequest) Descriptor() ([]byte, []int) {
	return file_proto_dts_v1_dts_proto_rawDescGZIP(), []int{19}
}

func (x *DeleteOIDCFlwRequest) GetFlowId() string {
	if x != nil {
		return x.FlowId
	}
	return ""
}

type UpdateOIDCFlwRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OidcFlow *OIDCFlw `protobuf:"bytes,1,opt,name=oidc_flow,json=oidcFlow,proto3" json:"oidc_flow,omitempty"`
}

func (x *UpdateOIDCFlwRequest) Reset() {
	*x = UpdateOIDCFlwRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dts_v1_dts_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateOIDCFlwRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateOIDCFlwRequest) ProtoMessage() {}

func (x *UpdateOIDCFlwRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dts_v1_dts_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateOIDCFlwRequest.ProtoReflect.Descriptor instead.
func (*UpdateOIDCFlwRequest) Descriptor() ([]byte, []int) {
	return file_proto_dts_v1_dts_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateOIDCFlwRequest) GetOidcFlow() *OIDCFlw {
	if x != nil {
		return x.OidcFlow
	}
	return nil
}

type UserSession struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId       string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	UserId          string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	AuthenticatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=authenticated_at,json=authenticatedAt,proto3" json:"authenticated_at,omitempty"`
	ExpiresAt       *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	UserAgent       string                 `protobuf:"bytes,5,opt,name=user_agent,json=userAgent,proto3" json:"user_agent,omitempty"`
	IpAddress       string                 `protobuf:"bytes,6,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	AcrLevel        string                 `protobuf:"bytes,7,opt,name=acr_level,json=acrLevel,proto3" json:"acr_level,omitempty"`       // Added from oidcflow.UserSession
	AmrMethods      string                 `protobuf:"bytes,8,opt,name=amr_methods,json=amrMethods,proto3" json:"amr_methods,omitempty"` // Added from oidcflow.UserSession (could be a repeated string)
}

func (x *UserSession) Reset() {
	*x = UserSession{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dts_v1_dts_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSession) ProtoMessage() {}

func (x *UserSession) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dts_v1_dts_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSession.ProtoReflect.Descriptor instead.
func (*UserSession) Descriptor() ([]byte, []int) {
	return file_proto_dts_v1_dts_proto_rawDescGZIP(), []int{21}
}

func (x *UserSession) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *UserSession) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserSession) GetAuthenticatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.AuthenticatedAt
	}
	return nil
}

func (x *UserSession) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *UserSession) GetUserAgent() string {
	if x != nil {
		return x.UserAgent
	}
	return ""
}

func (x *UserSession) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *UserSession) GetAcrLevel() string {
	if x != nil {
		return x.AcrLevel
	}
	return ""
}

func (x *UserSession) GetAmrMethods() string {
	if x != nil {
		return x.AmrMethods
	}
	return ""
}

type StoreUserSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserSession *UserSession `protobuf:"bytes,1,opt,name=user_session,json=userSession,proto3" json:"user_session,omitempty"`
}

func (x *StoreUserSessionRequest) Reset() {
	*x = StoreUserSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dts_v1_dts_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreUserSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreUserSessionRequest) ProtoMessage() {}

func (x *StoreUserSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dts_v1_dts_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreUserSessionRequest.ProtoReflect.Descriptor instead.
func (*StoreUserSessionRequest) Descriptor() ([]byte, []int) {
	return file_proto_dts_v1_dts_proto_rawDescGZIP(), []int{22}
}

func (x *StoreUserSessionRequest) GetUserSession() *UserSession {
	if x != nil {
		return x.UserSession
	}
	return nil
}

type GetUserSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *GetUserSessionRequest) Reset() {
	*x = GetUserSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dts_v1_dts_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserSessionRequest) ProtoMessage() {}

func (x *GetUserSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dts_v1_dts_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserSessionRequest.ProtoReflect.Descriptor instead.
func (*GetUserSessionRequest) Descriptor() ([]byte, []int) {
	return file_proto_dts_v1_dts_proto_rawDescGZIP(), []int{23}
}

func (x *GetUserSessionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type DeleteUserSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
}

func (x *DeleteUserSessionRequest) Reset() {
	*x = DeleteUserSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dts_v1_dts_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteUserSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteUserSessionRequest) ProtoMessage() {}

func (x *DeleteUserSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dts_v1_dts_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteUserSessionRequest.ProtoReflect.Descriptor instead.
func (*DeleteUserSessionRequest) Descriptor() ([]byte, []int) {
	return file_proto_dts_v1_dts_proto_rawDescGZIP(), []int{24}
}

func (x *DeleteUserSessionRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type DeviceAuth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceCode   string                 `protobuf:"bytes,1,opt,name=device_code,json=deviceCode,proto3" json:"device_code,omitempty"`
	UserCode     string                 `protobuf:"bytes,2,opt,name=user_code,json=userCode,proto3" json:"user_code,omitempty"`
	ClientId     string                 `protobuf:"bytes,3,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	Scope        string                 `protobuf:"bytes,4,opt,name=scope,proto3" json:"scope,omitempty"`
	ExpiresAt    *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	LastPolledAt *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=last_polled_at,json=lastPolledAt,proto3" json:"last_polled_at,omitempty"`
	PollInterval *durationpb.Duration   `protobuf:"bytes,7,opt,name=poll_interval,json=pollInterval,proto3" json:"poll_interval,omitempty"`
	Status       string                 `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`                         // e.g., "pending", "approved", "denied", "expired"
	UserId       string                 `protobuf:"bytes,9,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`           // if approved
	SessionId    string                 `protobuf:"bytes,10,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"` // Added from domain.DeviceCodeData
	Claims       string                 `protobuf:"bytes,11,opt,name=claims,proto3" json:"claims,omitempty"`                        // JSON string for claims // Added from domain.DeviceCodeData
}

func (x *DeviceAuth) Reset() {
	*x = DeviceAuth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dts_v1_dts_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceAuth) ProtoMessage() {}

func (x *DeviceAuth) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dts_v1_dts_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceAuth.ProtoReflect.Descriptor instead.
func (*DeviceAuth) Descriptor() ([]byte, []int) {
	return file_proto_dts_v1_dts_proto_rawDescGZIP(), []int{25}
}

func (x *DeviceAuth) GetDeviceCode() string {
	if x != nil {
		return x.DeviceCode
	}
	return ""
}

func (x *DeviceAuth) GetUserCode() string {
	if x != nil {
		return x.UserCode
	}
	return ""
}

func (x *DeviceAuth) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *DeviceAuth) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *DeviceAuth) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *DeviceAuth) GetLastPolledAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastPolledAt
	}
	return nil
}

func (x *DeviceAuth) GetPollInterval() *durationpb.Duration {
	if x != nil {
		return x.PollInterval
	}
	return nil
}

func (x *DeviceAuth) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *DeviceAuth) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *DeviceAuth) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *DeviceAuth) GetClaims() string {
	if x != nil {
		return x.Claims
	}
	return ""
}

type StoreDeviceAuthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceAuth *DeviceAuth `protobuf:"bytes,1,opt,name=device_auth,json=deviceAuth,proto3" json:"device_auth,omitempty"`
}

func (x *StoreDeviceAuthRequest) Reset() {
	*x = StoreDeviceAuthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dts_v1_dts_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreDeviceAuthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreDeviceAuthRequest) ProtoMessage() {}

func (x *StoreDeviceAuthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dts_v1_dts_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreDeviceAuthRequest.ProtoReflect.Descriptor instead.
func (*StoreDeviceAuthRequest) Descriptor() ([]byte, []int) {
	return file_proto_dts_v1_dts_proto_rawDescGZIP(), []int{26}
}

func (x *StoreDeviceAuthRequest) GetDeviceAuth() *DeviceAuth {
	if x != nil {
		return x.DeviceAuth
	}
	return nil
}

type GetDeviceAuthByDeviceCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceCode string `protobuf:"bytes,1,opt,name=device_code,json=deviceCode,proto3" json:"device_code,omitempty"`
}

func (x *GetDeviceAuthByDeviceCodeRequest) Reset() {
	*x = GetDeviceAuthByDeviceCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dts_v1_dts_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceAuthByDeviceCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceAuthByDeviceCodeRequest) ProtoMessage() {}

func (x *GetDeviceAuthByDeviceCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dts_v1_dts_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceAuthByDeviceCodeRequest.ProtoReflect.Descriptor instead.
func (*GetDeviceAuthByDeviceCodeRequest) Descriptor() ([]byte, []int) {
	return file_proto_dts_v1_dts_proto_rawDescGZIP(), []int{27}
}

func (x *GetDeviceAuthByDeviceCodeRequest) GetDeviceCode() string {
	if x != nil {
		return x.DeviceCode
	}
	return ""
}

type GetDeviceAuthByUserCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserCode string `protobuf:"bytes,1,opt,name=user_code,json=userCode,proto3" json:"user_code,omitempty"`
}

func (x *GetDeviceAuthByUserCodeRequest) Reset() {
	*x = GetDeviceAuthByUserCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dts_v1_dts_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeviceAuthByUserCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeviceAuthByUserCodeRequest) ProtoMessage() {}

func (x *GetDeviceAuthByUserCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dts_v1_dts_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeviceAuthByUserCodeRequest.ProtoReflect.Descriptor instead.
func (*GetDeviceAuthByUserCodeRequest) Descriptor() ([]byte, []int) {
	return file_proto_dts_v1_dts_proto_rawDescGZIP(), []int{28}
}

func (x *GetDeviceAuthByUserCodeRequest) GetUserCode() string {
	if x != nil {
		return x.UserCode
	}
	return ""
}

type UpdateDeviceAuthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceAuth *DeviceAuth `protobuf:"bytes,1,opt,name=device_auth,json=deviceAuth,proto3" json:"device_auth,omitempty"`
}

func (x *UpdateDeviceAuthRequest) Reset() {
	*x = UpdateDeviceAuthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dts_v1_dts_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateDeviceAuthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDeviceAuthRequest) ProtoMessage() {}

func (x *UpdateDeviceAuthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dts_v1_dts_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDeviceAuthRequest.ProtoReflect.Descriptor instead.
func (*UpdateDeviceAuthRequest) Descriptor() ([]byte, []int) {
	return file_proto_dts_v1_dts_proto_rawDescGZIP(), []int{29}
}

func (x *UpdateDeviceAuthRequest) GetDeviceAuth() *DeviceAuth {
	if x != nil {
		return x.DeviceAuth
	}
	return nil
}

type DeleteDeviceAuthRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceCode string `protobuf:"bytes,1,opt,name=device_code,json=deviceCode,proto3" json:"device_code,omitempty"` // Can be identified by device_code
}

func (x *DeleteDeviceAuthRequest) Reset() {
	*x = DeleteDeviceAuthRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dts_v1_dts_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteDeviceAuthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDeviceAuthRequest) ProtoMessage() {}

func (x *DeleteDeviceAuthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dts_v1_dts_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDeviceAuthRequest.ProtoReflect.Descriptor instead.
func (*DeleteDeviceAuthRequest) Descriptor() ([]byte, []int) {
	return file_proto_dts_v1_dts_proto_rawDescGZIP(), []int{30}
}

func (x *DeleteDeviceAuthRequest) GetDeviceCode() string {
	if x != nil {
		return x.DeviceCode
	}
	return ""
}

type PKCEState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CodeHash            string                 `protobuf:"bytes,1,opt,name=code_hash,json=codeHash,proto3" json:"code_hash,omitempty"` // Hash of the authorization code this PKCE state is tied to
	CodeChallenge       string                 `protobuf:"bytes,2,opt,name=code_challenge,json=codeChallenge,proto3" json:"code_challenge,omitempty"`
	CodeChallengeMethod string                 `protobuf:"bytes,3,opt,name=code_challenge_method,json=codeChallengeMethod,proto3" json:"code_challenge_method,omitempty"`
	ExpiresAt           *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
}

func (x *PKCEState) Reset() {
	*x = PKCEState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dts_v1_dts_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PKCEState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PKCEState) ProtoMessage() {}

func (x *PKCEState) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dts_v1_dts_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PKCEState.ProtoReflect.Descriptor instead.
func (*PKCEState) Descriptor() ([]byte, []int) {
	return file_proto_dts_v1_dts_proto_rawDescGZIP(), []int{31}
}

func (x *PKCEState) GetCodeHash() string {
	if x != nil {
		return x.CodeHash
	}
	return ""
}

func (x *PKCEState) GetCodeChallenge() string {
	if x != nil {
		return x.CodeChallenge
	}
	return ""
}

func (x *PKCEState) GetCodeChallengeMethod() string {
	if x != nil {
		return x.CodeChallengeMethod
	}
	return ""
}

func (x *PKCEState) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

type StorePKCEStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PkceState *PKCEState `protobuf:"bytes,1,opt,name=pkce_state,json=pkceState,proto3" json:"pkce_state,omitempty"`
}

func (x *StorePKCEStateRequest) Reset() {
	*x = StorePKCEStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dts_v1_dts_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorePKCEStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorePKCEStateRequest) ProtoMessage() {}

func (x *StorePKCEStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dts_v1_dts_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorePKCEStateRequest.ProtoReflect.Descriptor instead.
func (*StorePKCEStateRequest) Descriptor() ([]byte, []int) {
	return file_proto_dts_v1_dts_proto_rawDescGZIP(), []int{32}
}

func (x *StorePKCEStateRequest) GetPkceState() *PKCEState {
	if x != nil {
		return x.PkceState
	}
	return nil
}

type GetPKCEStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CodeHash string `protobuf:"bytes,1,opt,name=code_hash,json=codeHash,proto3" json:"code_hash,omitempty"`
}

func (x *GetPKCEStateRequest) Reset() {
	*x = GetPKCEStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dts_v1_dts_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPKCEStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPKCEStateRequest) ProtoMessage() {}

func (x *GetPKCEStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dts_v1_dts_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPKCEStateRequest.ProtoReflect.Descriptor instead.
func (*GetPKCEStateRequest) Descriptor() ([]byte, []int) {
	return file_proto_dts_v1_dts_proto_rawDescGZIP(), []int{33}
}

func (x *GetPKCEStateRequest) GetCodeHash() string {
	if x != nil {
		return x.CodeHash
	}
	return ""
}

type DeletePKCEStateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CodeHash string `protobuf:"bytes,1,opt,name=code_hash,json=codeHash,proto3" json:"code_hash,omitempty"`
}

func (x *DeletePKCEStateRequest) Reset() {
	*x = DeletePKCEStateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_dts_v1_dts_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePKCEStateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePKCEStateRequest) ProtoMessage() {}

func (x *DeletePKCEStateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_dts_v1_dts_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePKCEStateRequest.ProtoReflect.Descriptor instead.
func (*DeletePKCEStateRequest) Descriptor() ([]byte, []int) {
	return file_proto_dts_v1_dts_proto_rawDescGZIP(), []int{34}
}

func (x *DeletePKCEStateRequest) GetCodeHash() string {
	if x != nil {
		return x.CodeHash
	}
	return ""
}

var File_proto_dts_v1_dts_proto protoreflect.FileDescriptor

var file_proto_dts_v1_dts_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x64,
	0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x64, 0x74, 0x73, 0x2e, 0x76, 0x31,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x79,
	0x0a, 0x0a, 0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75,
	0x63, 0x6b, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2b, 0x0a, 0x03,
	0x74, 0x74, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x74, 0x74, 0x6c, 0x22, 0x36, 0x0a, 0x0a, 0x47, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x22, 0x74, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x39, 0x0a, 0x0a,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x65, 0x78,
	0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x22, 0x39, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63, 0x6b,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x22, 0xfe, 0x02, 0x0a, 0x08, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x69, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f,
	0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6c, 0x6c,
	0x65, 0x6e, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x64, 0x65,
	0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6f, 0x64,
	0x65, 0x5f, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x6f, 0x64, 0x65, 0x43, 0x68,
	0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x39, 0x0a,
	0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6c, 0x61, 0x69, 0x6d,
	0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x12,
	0x22, 0x0a, 0x0d, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x61, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x54, 0x69, 0x6d, 0x65,
	0x49, 0x61, 0x74, 0x22, 0x45, 0x0a, 0x14, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x41, 0x75, 0x74, 0x68,
	0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x09, 0x61,
	0x75, 0x74, 0x68, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x64, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6f, 0x64, 0x65,
	0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x28, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x22, 0x2b, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x75,
	0x74, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x22, 0xe2, 0x01, 0x0a, 0x0c, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73,
	0x63, 0x6f, 0x70, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f,
	0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x63, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x22, 0x55, 0x0a, 0x18, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52,
	0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x39, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x64, 0x74, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x2e, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x31, 0x0a,
	0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0xa9, 0x02, 0x0a, 0x13, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63,
	0x6f, 0x70, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x73, 0x22, 0x72, 0x0a, 0x1f,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x4f, 0x0a, 0x15, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x64, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x13, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x3e, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x48, 0x61, 0x73, 0x68,
	0x22, 0x41, 0x0a, 0x20, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x48,
	0x61, 0x73, 0x68, 0x22, 0xa2, 0x05, 0x0a, 0x07, 0x4f, 0x49, 0x44, 0x43, 0x46, 0x6c, 0x77, 0x12,
	0x17, 0x0a, 0x07, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x64,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x55, 0x72, 0x69, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f,
	0x64, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x64, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67,
	0x65, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65,
	0x6e, 0x67, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x13, 0x63, 0x6f, 0x64, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73,
	0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74,
	0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x4e, 0x0a, 0x15, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x13, 0x75, 0x73, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x59, 0x0a, 0x14, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x6f, 0x69, 0x64, 0x63, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x64, 0x74, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x4f, 0x49, 0x44, 0x43, 0x46, 0x6c, 0x77, 0x2e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61,
	0x6c, 0x4f, 0x69, 0x64, 0x63, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x12, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x4f, 0x69, 0x64, 0x63, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63, 0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x63, 0x72, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6d, 0x72, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x6d, 0x72, 0x4d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x1a, 0x45, 0x0a, 0x17, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x4f, 0x69, 0x64,
	0x63, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x43, 0x0a, 0x13, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x4f, 0x49, 0x44, 0x43, 0x46, 0x6c, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2c, 0x0a, 0x09, 0x6f, 0x69, 0x64, 0x63, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x64, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x49, 0x44, 0x43,
	0x46, 0x6c, 0x77, 0x52, 0x08, 0x6f, 0x69, 0x64, 0x63, 0x46, 0x6c, 0x6f, 0x77, 0x22, 0x2c, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x4f, 0x49, 0x44, 0x43, 0x46, 0x6c, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x22, 0x2f, 0x0a, 0x14, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x49, 0x44, 0x43, 0x46, 0x6c, 0x77, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x64, 0x22, 0x44, 0x0a, 0x14,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x49, 0x44, 0x43, 0x46, 0x6c, 0x77, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x09, 0x6f, 0x69, 0x64, 0x63, 0x5f, 0x66, 0x6c, 0x6f,
	0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x64, 0x74, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x4f, 0x49, 0x44, 0x43, 0x46, 0x6c, 0x77, 0x52, 0x08, 0x6f, 0x69, 0x64, 0x63, 0x46, 0x6c,
	0x6f, 0x77, 0x22, 0xc3, 0x02, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x45, 0x0a, 0x10, 0x61, 0x75,
	0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x0f, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x39, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69,
	0x70, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x69, 0x70, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x63,
	0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61,
	0x63, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x6d, 0x72, 0x5f, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x6d,
	0x72, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x73, 0x22, 0x51, 0x0a, 0x17, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x64, 0x74, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x0b,
	0x75, 0x73, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x36, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x22, 0x39, 0x0a, 0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65,
	0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0xa2,
	0x03, 0x0a, 0x0a, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x75, 0x74, 0x68, 0x12, 0x1f, 0x0a,
	0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x39,
	0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x12, 0x40, 0x0a, 0x0e, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x70, 0x6f, 0x6c, 0x6c, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x6c,
	0x61, 0x73, 0x74, 0x50, 0x6f, 0x6c, 0x6c, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3e, 0x0a, 0x0d, 0x70,
	0x6f, 0x6c, 0x6c, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x70,
	0x6f, 0x6c, 0x6c, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63,
	0x6c, 0x61, 0x69, 0x6d, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6c, 0x61,
	0x69, 0x6d, 0x73, 0x22, 0x4d, 0x0a, 0x16, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x33, 0x0a,
	0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x64, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x75,
	0x74, 0x68, 0x22, 0x43, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41,
	0x75, 0x74, 0x68, 0x42, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x3d, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x41, 0x75, 0x74, 0x68, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x4e, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x33, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x64, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x41, 0x75, 0x74, 0x68, 0x22, 0x3a, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x22, 0xbe, 0x01, 0x0a, 0x09, 0x50, 0x4b, 0x43, 0x45, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x64, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x25, 0x0a,
	0x0e, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x64, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c,
	0x65, 0x6e, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x68, 0x61,
	0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x6f, 0x64, 0x65, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e,
	0x67, 0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69,
	0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65,
	0x73, 0x41, 0x74, 0x22, 0x49, 0x0a, 0x15, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x4b, 0x43, 0x45,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x0a,
	0x70, 0x6b, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x64, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x4b, 0x43, 0x45, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x09, 0x70, 0x6b, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x32,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x4b, 0x43, 0x45, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x68, 0x61,
	0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x64, 0x65, 0x48, 0x61,
	0x73, 0x68, 0x22, 0x35, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x4b, 0x43, 0x45,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x6f, 0x64, 0x65, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x6f, 0x64, 0x65, 0x48, 0x61, 0x73, 0x68, 0x32, 0xd9, 0x0f, 0x0a, 0x11, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x31, 0x0a, 0x03, 0x53, 0x65, 0x74, 0x12, 0x12, 0x2e, 0x64, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x2e, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x12, 0x2e, 0x64, 0x74, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e,
	0x64, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x15, 0x2e, 0x64,
	0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x45, 0x0a, 0x0d, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x2e, 0x64,
	0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x41, 0x75, 0x74, 0x68, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x3b, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x1a, 0x2e, 0x64, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x75,
	0x74, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e,
	0x64, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x47, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x1d, 0x2e, 0x64, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4d, 0x0a, 0x11, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x20, 0x2e,
	0x64, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x47, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x52, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1e, 0x2e, 0x64, 0x74, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x64, 0x74, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x4f, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x21, 0x2e, 0x64, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x5b, 0x0a, 0x18, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x27, 0x2e,
	0x64, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x5c,
	0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x25, 0x2e, 0x64, 0x74, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1b, 0x2e, 0x64, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x5d, 0x0a, 0x19,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x28, 0x2e, 0x64, 0x74, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x43, 0x0a, 0x0c, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x4f, 0x49, 0x44, 0x43, 0x46, 0x6c, 0x77, 0x12, 0x1b, 0x2e, 0x64, 0x74,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x4f, 0x49, 0x44, 0x43, 0x46, 0x6c,
	0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x38, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4f, 0x49, 0x44, 0x43, 0x46, 0x6c, 0x77, 0x12, 0x19,
	0x2e, 0x64, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x49, 0x44, 0x43, 0x46,
	0x6c, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x64, 0x74, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x49, 0x44, 0x43, 0x46, 0x6c, 0x77, 0x12, 0x45, 0x0a, 0x0d, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4f, 0x49, 0x44, 0x43, 0x46, 0x6c, 0x77, 0x12, 0x1c, 0x2e, 0x64, 0x74,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x49, 0x44, 0x43, 0x46,
	0x6c, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x45, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4f, 0x49, 0x44, 0x43, 0x46,
	0x6c, 0x77, 0x12, 0x1c, 0x2e, 0x64, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4f, 0x49, 0x44, 0x43, 0x46, 0x6c, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x4b, 0x0a, 0x10, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x2e, 0x64,
	0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x44, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x2e, 0x64, 0x74, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x64, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x4d, 0x0a, 0x11, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x20, 0x2e, 0x64, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x49, 0x0a, 0x0f, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x75, 0x74, 0x68, 0x12, 0x1e, 0x2e,
	0x64, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x59, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x41, 0x75, 0x74, 0x68, 0x42, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x28, 0x2e, 0x64, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x75, 0x74, 0x68, 0x42, 0x79, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x64,
	0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x75, 0x74, 0x68,
	0x12, 0x55, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x75, 0x74,
	0x68, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x2e, 0x64, 0x74,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x75,
	0x74, 0x68, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x64, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x41, 0x75, 0x74, 0x68, 0x12, 0x4b, 0x0a, 0x10, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x75, 0x74, 0x68, 0x12, 0x1f, 0x2e, 0x64, 0x74,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x41, 0x75, 0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x12, 0x4b, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x41, 0x75, 0x74, 0x68, 0x12, 0x1f, 0x2e, 0x64, 0x74, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x41, 0x75,
	0x74, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x47, 0x0a, 0x0e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x4b, 0x43, 0x45, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x64, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x50, 0x4b, 0x43, 0x45, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3e, 0x0a, 0x0c, 0x47, 0x65,
	0x74, 0x50, 0x4b, 0x43, 0x45, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x2e, 0x64, 0x74, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x4b, 0x43, 0x45, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x11, 0x2e, 0x64, 0x74, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x4b, 0x43, 0x45, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x49, 0x0a, 0x0f, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x50, 0x4b, 0x43, 0x45, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x2e,
	0x64, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x4b, 0x43,
	0x45, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x38, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x69, 0x6c, 0x61, 0x62, 0x2d, 0x64, 0x65, 0x76, 0x2f, 0x73, 0x68,
	0x61, 0x64, 0x6f, 0x77, 0x2d, 0x73, 0x73, 0x6f, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2f, 0x64, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x64, 0x74, 0x73, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_dts_v1_dts_proto_rawDescOnce sync.Once
	file_proto_dts_v1_dts_proto_rawDescData = file_proto_dts_v1_dts_proto_rawDesc
)

func file_proto_dts_v1_dts_proto_rawDescGZIP() []byte {
	file_proto_dts_v1_dts_proto_rawDescOnce.Do(func() {
		file_proto_dts_v1_dts_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_dts_v1_dts_proto_rawDescData)
	})
	return file_proto_dts_v1_dts_proto_rawDescData
}

var file_proto_dts_v1_dts_proto_msgTypes = make([]protoimpl.MessageInfo, 36)
var file_proto_dts_v1_dts_proto_goTypes = []interface{}{
	(*SetRequest)(nil),                       // 0: dts.v1.SetRequest
	(*GetRequest)(nil),                       // 1: dts.v1.GetRequest
	(*GetResponse)(nil),                      // 2: dts.v1.GetResponse
	(*DeleteRequest)(nil),                    // 3: dts.v1.DeleteRequest
	(*AuthCode)(nil),                         // 4: dts.v1.AuthCode
	(*StoreAuthCodeRequest)(nil),             // 5: dts.v1.StoreAuthCodeRequest
	(*GetAuthCodeRequest)(nil),               // 6: dts.v1.GetAuthCodeRequest
	(*DeleteAuthCodeRequest)(nil),            // 7: dts.v1.DeleteAuthCodeRequest
	(*RefreshToken)(nil),                     // 8: dts.v1.RefreshToken
	(*StoreRefreshTokenRequest)(nil),         // 9: dts.v1.StoreRefreshTokenRequest
	(*GetRefreshTokenRequest)(nil),           // 10: dts.v1.GetRefreshTokenRequest
	(*DeleteRefreshTokenRequest)(nil),        // 11: dts.v1.DeleteRefreshTokenRequest
	(*AccessTokenMetadata)(nil),              // 12: dts.v1.AccessTokenMetadata
	(*StoreAccessTokenMetadataRequest)(nil),  // 13: dts.v1.StoreAccessTokenMetadataRequest
	(*GetAccessTokenMetadataRequest)(nil),    // 14: dts.v1.GetAccessTokenMetadataRequest
	(*DeleteAccessTokenMetadataRequest)(nil), // 15: dts.v1.DeleteAccessTokenMetadataRequest
	(*OIDCFlw)(nil),                          // 16: dts.v1.OIDCFlw
	(*StoreOIDCFlwRequest)(nil),              // 17: dts.v1.StoreOIDCFlwRequest
	(*GetOIDCFlwRequest)(nil),                // 18: dts.v1.GetOIDCFlwRequest
	(*DeleteOIDCFlwRequest)(nil),             // 19: dts.v1.DeleteOIDCFlwRequest
	(*UpdateOIDCFlwRequest)(nil),             // 20: dts.v1.UpdateOIDCFlwRequest
	(*UserSession)(nil),                      // 21: dts.v1.UserSession
	(*StoreUserSessionRequest)(nil),          // 22: dts.v1.StoreUserSessionRequest
	(*GetUserSessionRequest)(nil),            // 23: dts.v1.GetUserSessionRequest
	(*DeleteUserSessionRequest)(nil),         // 24: dts.v1.DeleteUserSessionRequest
	(*DeviceAuth)(nil),                       // 25: dts.v1.DeviceAuth
	(*StoreDeviceAuthRequest)(nil),           // 26: dts.v1.StoreDeviceAuthRequest
	(*GetDeviceAuthByDeviceCodeRequest)(nil), // 27: dts.v1.GetDeviceAuthByDeviceCodeRequest
	(*GetDeviceAuthByUserCodeRequest)(nil),   // 28: dts.v1.GetDeviceAuthByUserCodeRequest
	(*UpdateDeviceAuthRequest)(nil),          // 29: dts.v1.UpdateDeviceAuthRequest
	(*DeleteDeviceAuthRequest)(nil),          // 30: dts.v1.DeleteDeviceAuthRequest
	(*PKCEState)(nil),                        // 31: dts.v1.PKCEState
	(*StorePKCEStateRequest)(nil),            // 32: dts.v1.StorePKCEStateRequest
	(*GetPKCEStateRequest)(nil),              // 33: dts.v1.GetPKCEStateRequest
	(*DeletePKCEStateRequest)(nil),           // 34: dts.v1.DeletePKCEStateRequest
	nil,                                      // 35: dts.v1.OIDCFlw.OriginalOidcParamsEntry
	(*durationpb.Duration)(nil),              // 36: google.protobuf.Duration
	(*timestamppb.Timestamp)(nil),            // 37: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                    // 38: google.protobuf.Empty
}
var file_proto_dts_v1_dts_proto_depIdxs = []int32{
	36, // 0: dts.v1.SetRequest.ttl:type_name -> google.protobuf.Duration
	37, // 1: dts.v1.GetResponse.expires_at:type_name -> google.protobuf.Timestamp
	37, // 2: dts.v1.AuthCode.expires_at:type_name -> google.protobuf.Timestamp
	4,  // 3: dts.v1.StoreAuthCodeRequest.auth_code:type_name -> dts.v1.AuthCode
	37, // 4: dts.v1.RefreshToken.expires_at:type_name -> google.protobuf.Timestamp
	8,  // 5: dts.v1.StoreRefreshTokenRequest.refresh_token:type_name -> dts.v1.RefreshToken
	37, // 6: dts.v1.AccessTokenMetadata.expires_at:type_name -> google.protobuf.Timestamp
	12, // 7: dts.v1.StoreAccessTokenMetadataRequest.access_token_metadata:type_name -> dts.v1.AccessTokenMetadata
	37, // 8: dts.v1.OIDCFlw.expires_at:type_name -> google.protobuf.Timestamp
	37, // 9: dts.v1.OIDCFlw.user_authenticated_at:type_name -> google.protobuf.Timestamp
	35, // 10: dts.v1.OIDCFlw.original_oidc_params:type_name -> dts.v1.OIDCFlw.OriginalOidcParamsEntry
	16, // 11: dts.v1.StoreOIDCFlwRequest.oidc_flow:type_name -> dts.v1.OIDCFlw
	16, // 12: dts.v1.UpdateOIDCFlwRequest.oidc_flow:type_name -> dts.v1.OIDCFlw
	37, // 13: dts.v1.UserSession.authenticated_at:type_name -> google.protobuf.Timestamp
	37, // 14: dts.v1.UserSession.expires_at:type_name -> google.protobuf.Timestamp
	21, // 15: dts.v1.StoreUserSessionRequest.user_session:type_name -> dts.v1.UserSession
	37, // 16: dts.v1.DeviceAuth.expires_at:type_name -> google.protobuf.Timestamp
	37, // 17: dts.v1.DeviceAuth.last_polled_at:type_name -> google.protobuf.Timestamp
	36, // 18: dts.v1.DeviceAuth.poll_interval:type_name -> google.protobuf.Duration
	25, // 19: dts.v1.StoreDeviceAuthRequest.device_auth:type_name -> dts.v1.DeviceAuth
	25, // 20: dts.v1.UpdateDeviceAuthRequest.device_auth:type_name -> dts.v1.DeviceAuth
	37, // 21: dts.v1.PKCEState.expires_at:type_name -> google.protobuf.Timestamp
	31, // 22: dts.v1.StorePKCEStateRequest.pkce_state:type_name -> dts.v1.PKCEState
	0,  // 23: dts.v1.TokenStoreService.Set:input_type -> dts.v1.SetRequest
	1,  // 24: dts.v1.TokenStoreService.Get:input_type -> dts.v1.GetRequest
	3,  // 25: dts.v1.TokenStoreService.Delete:input_type -> dts.v1.DeleteRequest
	5,  // 26: dts.v1.TokenStoreService.StoreAuthCode:input_type -> dts.v1.StoreAuthCodeRequest
	6,  // 27: dts.v1.TokenStoreService.GetAuthCode:input_type -> dts.v1.GetAuthCodeRequest
	7,  // 28: dts.v1.TokenStoreService.DeleteAuthCode:input_type -> dts.v1.DeleteAuthCodeRequest
	9,  // 29: dts.v1.TokenStoreService.StoreRefreshToken:input_type -> dts.v1.StoreRefreshTokenRequest
	10, // 30: dts.v1.TokenStoreService.GetRefreshToken:input_type -> dts.v1.GetRefreshTokenRequest
	11, // 31: dts.v1.TokenStoreService.DeleteRefreshToken:input_type -> dts.v1.DeleteRefreshTokenRequest
	13, // 32: dts.v1.TokenStoreService.StoreAccessTokenMetadata:input_type -> dts.v1.StoreAccessTokenMetadataRequest
	14, // 33: dts.v1.TokenStoreService.GetAccessTokenMetadata:input_type -> dts.v1.GetAccessTokenMetadataRequest
	15, // 34: dts.v1.TokenStoreService.DeleteAccessTokenMetadata:input_type -> dts.v1.DeleteAccessTokenMetadataRequest
	17, // 35: dts.v1.TokenStoreService.StoreOIDCFlw:input_type -> dts.v1.StoreOIDCFlwRequest
	18, // 36: dts.v1.TokenStoreService.GetOIDCFlw:input_type -> dts.v1.GetOIDCFlwRequest
	19, // 37: dts.v1.TokenStoreService.DeleteOIDCFlw:input_type -> dts.v1.DeleteOIDCFlwRequest
	20, // 38: dts.v1.TokenStoreService.UpdateOIDCFlw:input_type -> dts.v1.UpdateOIDCFlwRequest
	22, // 39: dts.v1.TokenStoreService.StoreUserSession:input_type -> dts.v1.StoreUserSessionRequest
	23, // 40: dts.v1.TokenStoreService.GetUserSession:input_type -> dts.v1.GetUserSessionRequest
	24, // 41: dts.v1.TokenStoreService.DeleteUserSession:input_type -> dts.v1.DeleteUserSessionRequest
	26, // 42: dts.v1.TokenStoreService.StoreDeviceAuth:input_type -> dts.v1.StoreDeviceAuthRequest
	27, // 43: dts.v1.TokenStoreService.GetDeviceAuthByDeviceCode:input_type -> dts.v1.GetDeviceAuthByDeviceCodeRequest
	28, // 44: dts.v1.TokenStoreService.GetDeviceAuthByUserCode:input_type -> dts.v1.GetDeviceAuthByUserCodeRequest
	29, // 45: dts.v1.TokenStoreService.UpdateDeviceAuth:input_type -> dts.v1.UpdateDeviceAuthRequest
	30, // 46: dts.v1.TokenStoreService.DeleteDeviceAuth:input_type -> dts.v1.DeleteDeviceAuthRequest
	32, // 47: dts.v1.TokenStoreService.StorePKCEState:input_type -> dts.v1.StorePKCEStateRequest
	33, // 48: dts.v1.TokenStoreService.GetPKCEState:input_type -> dts.v1.GetPKCEStateRequest
	34, // 49: dts.v1.TokenStoreService.DeletePKCEState:input_type -> dts.v1.DeletePKCEStateRequest
	38, // 50: dts.v1.TokenStoreService.Set:output_type -> google.protobuf.Empty
	2,  // 51: dts.v1.TokenStoreService.Get:output_type -> dts.v1.GetResponse
	38, // 52: dts.v1.TokenStoreService.Delete:output_type -> google.protobuf.Empty
	38, // 53: dts.v1.TokenStoreService.StoreAuthCode:output_type -> google.protobuf.Empty
	4,  // 54: dts.v1.TokenStoreService.GetAuthCode:output_type -> dts.v1.AuthCode
	38, // 55: dts.v1.TokenStoreService.DeleteAuthCode:output_type -> google.protobuf.Empty
	38, // 56: dts.v1.TokenStoreService.StoreRefreshToken:output_type -> google.protobuf.Empty
	8,  // 57: dts.v1.TokenStoreService.GetRefreshToken:output_type -> dts.v1.RefreshToken
	38, // 58: dts.v1.TokenStoreService.DeleteRefreshToken:output_type -> google.protobuf.Empty
	38, // 59: dts.v1.TokenStoreService.StoreAccessTokenMetadata:output_type -> google.protobuf.Empty
	12, // 60: dts.v1.TokenStoreService.GetAccessTokenMetadata:output_type -> dts.v1.AccessTokenMetadata
	38, // 61: dts.v1.TokenStoreService.DeleteAccessTokenMetadata:output_type -> google.protobuf.Empty
	38, // 62: dts.v1.TokenStoreService.StoreOIDCFlw:output_type -> google.protobuf.Empty
	16, // 63: dts.v1.TokenStoreService.GetOIDCFlw:output_type -> dts.v1.OIDCFlw
	38, // 64: dts.v1.TokenStoreService.DeleteOIDCFlw:output_type -> google.protobuf.Empty
	38, // 65: dts.v1.TokenStoreService.UpdateOIDCFlw:output_type -> google.protobuf.Empty
	38, // 66: dts.v1.TokenStoreService.StoreUserSession:output_type -> google.protobuf.Empty
	21, // 67: dts.v1.TokenStoreService.GetUserSession:output_type -> dts.v1.UserSession
	38, // 68: dts.v1.TokenStoreService.DeleteUserSession:output_type -> google.protobuf.Empty
	38, // 69: dts.v1.TokenStoreService.StoreDeviceAuth:output_type -> google.protobuf.Empty
	25, // 70: dts.v1.TokenStoreService.GetDeviceAuthByDeviceCode:output_type -> dts.v1.DeviceAuth
	25, // 71: dts.v1.TokenStoreService.GetDeviceAuthByUserCode:output_type -> dts.v1.DeviceAuth
	38, // 72: dts.v1.TokenStoreService.UpdateDeviceAuth:output_type -> google.protobuf.Empty
	38, // 73: dts.v1.TokenStoreService.DeleteDeviceAuth:output_type -> google.protobuf.Empty
	38, // 74: dts.v1.TokenStoreService.StorePKCEState:output_type -> google.protobuf.Empty
	31, // 75: dts.v1.TokenStoreService.GetPKCEState:output_type -> dts.v1.PKCEState
	38, // 76: dts.v1.TokenStoreService.DeletePKCEState:output_type -> google.protobuf.Empty
	50, // [50:77] is the sub-list for method output_type
	23, // [23:50] is the sub-list for method input_type
	23, // [23:23] is the sub-list for extension type_name
	23, // [23:23] is the sub-list for extension extendee
	0,  // [0:23] is the sub-list for field type_name
}

func init() { file_proto_dts_v1_dts_proto_init() }
func file_proto_dts_v1_dts_proto_init() {
	if File_proto_dts_v1_dts_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_dts_v1_dts_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dts_v1_dts_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dts_v1_dts_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dts_v1_dts_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dts_v1_dts_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dts_v1_dts_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreAuthCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dts_v1_dts_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAuthCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dts_v1_dts_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAuthCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dts_v1_dts_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dts_v1_dts_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreRefreshTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dts_v1_dts_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRefreshTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dts_v1_dts_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteRefreshTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dts_v1_dts_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessTokenMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dts_v1_dts_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreAccessTokenMetadataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dts_v1_dts_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccessTokenMetadataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dts_v1_dts_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAccessTokenMetadataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dts_v1_dts_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OIDCFlw); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dts_v1_dts_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreOIDCFlwRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dts_v1_dts_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOIDCFlwRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dts_v1_dts_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOIDCFlwRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dts_v1_dts_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateOIDCFlwRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dts_v1_dts_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSession); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dts_v1_dts_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreUserSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dts_v1_dts_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dts_v1_dts_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteUserSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dts_v1_dts_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceAuth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dts_v1_dts_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreDeviceAuthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dts_v1_dts_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceAuthByDeviceCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dts_v1_dts_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeviceAuthByUserCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dts_v1_dts_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateDeviceAuthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dts_v1_dts_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteDeviceAuthRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dts_v1_dts_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PKCEState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dts_v1_dts_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorePKCEStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dts_v1_dts_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPKCEStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_dts_v1_dts_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePKCEStateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_dts_v1_dts_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   36,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_dts_v1_dts_proto_goTypes,
		DependencyIndexes: file_proto_dts_v1_dts_proto_depIdxs,
		MessageInfos:      file_proto_dts_v1_dts_proto_msgTypes,
	}.Build()
	File_proto_dts_v1_dts_proto = out.File
	file_proto_dts_v1_dts_proto_rawDesc = nil
	file_proto_dts_v1_dts_proto_goTypes = nil
	file_proto_dts_v1_dts_proto_depIdxs = nil
}
