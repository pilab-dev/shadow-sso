// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        (unknown)
// source: proto/sso/v1/idp_management_service.proto

package ssov1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enum for IdP types, mirroring domain.IdPType
type IdPTypeProto int32

const (
	IdPTypeProto_IDP_TYPE_UNSPECIFIED IdPTypeProto = 0
	IdPTypeProto_IDP_TYPE_OIDC        IdPTypeProto = 1
	IdPTypeProto_IDP_TYPE_SAML        IdPTypeProto = 2 // Future support
)

// Enum value maps for IdPTypeProto.
var (
	IdPTypeProto_name = map[int32]string{
		0: "IDP_TYPE_UNSPECIFIED",
		1: "IDP_TYPE_OIDC",
		2: "IDP_TYPE_SAML",
	}
	IdPTypeProto_value = map[string]int32{
		"IDP_TYPE_UNSPECIFIED": 0,
		"IDP_TYPE_OIDC":        1,
		"IDP_TYPE_SAML":        2,
	}
)

func (x IdPTypeProto) Enum() *IdPTypeProto {
	p := new(IdPTypeProto)
	*p = x
	return p
}

func (x IdPTypeProto) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IdPTypeProto) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_sso_v1_idp_management_service_proto_enumTypes[0].Descriptor()
}

func (IdPTypeProto) Type() protoreflect.EnumType {
	return &file_proto_sso_v1_idp_management_service_proto_enumTypes[0]
}

func (x IdPTypeProto) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IdPTypeProto.Descriptor instead.
func (IdPTypeProto) EnumDescriptor() ([]byte, []int) {
	return file_proto_sso_v1_idp_management_service_proto_rawDescGZIP(), []int{0}
}

// Message for attribute mapping, mirroring domain.AttributeMapping
type AttributeMappingProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExternalAttributeName string `protobuf:"bytes,1,opt,name=external_attribute_name,json=externalAttributeName,proto3" json:"external_attribute_name,omitempty"`
	LocalUserAttribute    string `protobuf:"bytes,2,opt,name=local_user_attribute,json=localUserAttribute,proto3" json:"local_user_attribute,omitempty"` // e.g., "Email", "FirstName", "LastName", "Roles"
}

func (x *AttributeMappingProto) Reset() {
	*x = AttributeMappingProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sso_v1_idp_management_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AttributeMappingProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttributeMappingProto) ProtoMessage() {}

func (x *AttributeMappingProto) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sso_v1_idp_management_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttributeMappingProto.ProtoReflect.Descriptor instead.
func (*AttributeMappingProto) Descriptor() ([]byte, []int) {
	return file_proto_sso_v1_idp_management_service_proto_rawDescGZIP(), []int{0}
}

func (x *AttributeMappingProto) GetExternalAttributeName() string {
	if x != nil {
		return x.ExternalAttributeName
	}
	return ""
}

func (x *AttributeMappingProto) GetLocalUserAttribute() string {
	if x != nil {
		return x.LocalUserAttribute
	}
	return ""
}

// Message for IdP configuration, mirroring domain.IdentityProvider
type IdentityProviderProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                 // Unique ID for this IdP config
	Name      string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                             // User-friendly name (e.g., "Login with Google")
	Type      IdPTypeProto `protobuf:"varint,3,opt,name=type,proto3,enum=sso.v1.IdPTypeProto" json:"type,omitempty"`   // OIDC or SAML
	IsEnabled bool         `protobuf:"varint,4,opt,name=is_enabled,json=isEnabled,proto3" json:"is_enabled,omitempty"` // Whether this IdP is active for login
	// OIDC Specific Fields
	OidcClientId      string                   `protobuf:"bytes,5,opt,name=oidc_client_id,json=oidcClientId,proto3" json:"oidc_client_id,omitempty"`
	OidcClientSecret  string                   `protobuf:"bytes,6,opt,name=oidc_client_secret,json=oidcClientSecret,proto3" json:"oidc_client_secret,omitempty"` // Should be write-only or handled carefully if returned (omitted in Get/List responses)
	OidcIssuerUrl     string                   `protobuf:"bytes,7,opt,name=oidc_issuer_url,json=oidcIssuerUrl,proto3" json:"oidc_issuer_url,omitempty"`
	OidcScopes        []string                 `protobuf:"bytes,8,rep,name=oidc_scopes,json=oidcScopes,proto3" json:"oidc_scopes,omitempty"`
	AttributeMappings []*AttributeMappingProto `protobuf:"bytes,11,rep,name=attribute_mappings,json=attributeMappings,proto3" json:"attribute_mappings,omitempty"`
	CreatedAt         *timestamppb.Timestamp   `protobuf:"bytes,12,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt         *timestamppb.Timestamp   `protobuf:"bytes,13,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *IdentityProviderProto) Reset() {
	*x = IdentityProviderProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sso_v1_idp_management_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdentityProviderProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdentityProviderProto) ProtoMessage() {}

func (x *IdentityProviderProto) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sso_v1_idp_management_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdentityProviderProto.ProtoReflect.Descriptor instead.
func (*IdentityProviderProto) Descriptor() ([]byte, []int) {
	return file_proto_sso_v1_idp_management_service_proto_rawDescGZIP(), []int{1}
}

func (x *IdentityProviderProto) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *IdentityProviderProto) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IdentityProviderProto) GetType() IdPTypeProto {
	if x != nil {
		return x.Type
	}
	return IdPTypeProto_IDP_TYPE_UNSPECIFIED
}

func (x *IdentityProviderProto) GetIsEnabled() bool {
	if x != nil {
		return x.IsEnabled
	}
	return false
}

func (x *IdentityProviderProto) GetOidcClientId() string {
	if x != nil {
		return x.OidcClientId
	}
	return ""
}

func (x *IdentityProviderProto) GetOidcClientSecret() string {
	if x != nil {
		return x.OidcClientSecret
	}
	return ""
}

func (x *IdentityProviderProto) GetOidcIssuerUrl() string {
	if x != nil {
		return x.OidcIssuerUrl
	}
	return ""
}

func (x *IdentityProviderProto) GetOidcScopes() []string {
	if x != nil {
		return x.OidcScopes
	}
	return nil
}

func (x *IdentityProviderProto) GetAttributeMappings() []*AttributeMappingProto {
	if x != nil {
		return x.AttributeMappings
	}
	return nil
}

func (x *IdentityProviderProto) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *IdentityProviderProto) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// --- AddIdP ---
type AddIdPRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type      IdPTypeProto `protobuf:"varint,2,opt,name=type,proto3,enum=sso.v1.IdPTypeProto" json:"type,omitempty"`
	IsEnabled bool         `protobuf:"varint,3,opt,name=is_enabled,json=isEnabled,proto3" json:"is_enabled,omitempty"`
	// OIDC config
	OidcClientId      *string                  `protobuf:"bytes,4,opt,name=oidc_client_id,json=oidcClientId,proto3,oneof" json:"oidc_client_id,omitempty"`
	OidcClientSecret  *string                  `protobuf:"bytes,5,opt,name=oidc_client_secret,json=oidcClientSecret,proto3,oneof" json:"oidc_client_secret,omitempty"` // Sent on creation/update
	OidcIssuerUrl     *string                  `protobuf:"bytes,6,opt,name=oidc_issuer_url,json=oidcIssuerUrl,proto3,oneof" json:"oidc_issuer_url,omitempty"`
	OidcScopes        []string                 `protobuf:"bytes,7,rep,name=oidc_scopes,json=oidcScopes,proto3" json:"oidc_scopes,omitempty"`
	AttributeMappings []*AttributeMappingProto `protobuf:"bytes,8,rep,name=attribute_mappings,json=attributeMappings,proto3" json:"attribute_mappings,omitempty"`
}

func (x *AddIdPRequest) Reset() {
	*x = AddIdPRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sso_v1_idp_management_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddIdPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddIdPRequest) ProtoMessage() {}

func (x *AddIdPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sso_v1_idp_management_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddIdPRequest.ProtoReflect.Descriptor instead.
func (*AddIdPRequest) Descriptor() ([]byte, []int) {
	return file_proto_sso_v1_idp_management_service_proto_rawDescGZIP(), []int{2}
}

func (x *AddIdPRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddIdPRequest) GetType() IdPTypeProto {
	if x != nil {
		return x.Type
	}
	return IdPTypeProto_IDP_TYPE_UNSPECIFIED
}

func (x *AddIdPRequest) GetIsEnabled() bool {
	if x != nil {
		return x.IsEnabled
	}
	return false
}

func (x *AddIdPRequest) GetOidcClientId() string {
	if x != nil && x.OidcClientId != nil {
		return *x.OidcClientId
	}
	return ""
}

func (x *AddIdPRequest) GetOidcClientSecret() string {
	if x != nil && x.OidcClientSecret != nil {
		return *x.OidcClientSecret
	}
	return ""
}

func (x *AddIdPRequest) GetOidcIssuerUrl() string {
	if x != nil && x.OidcIssuerUrl != nil {
		return *x.OidcIssuerUrl
	}
	return ""
}

func (x *AddIdPRequest) GetOidcScopes() []string {
	if x != nil {
		return x.OidcScopes
	}
	return nil
}

func (x *AddIdPRequest) GetAttributeMappings() []*AttributeMappingProto {
	if x != nil {
		return x.AttributeMappings
	}
	return nil
}

type AddIdPResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Idp *IdentityProviderProto `protobuf:"bytes,1,opt,name=idp,proto3" json:"idp,omitempty"` // Returns the created IdP (secret should be omitted by server logic if field exists in IdentityProviderProto)
}

func (x *AddIdPResponse) Reset() {
	*x = AddIdPResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sso_v1_idp_management_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddIdPResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddIdPResponse) ProtoMessage() {}

func (x *AddIdPResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sso_v1_idp_management_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddIdPResponse.ProtoReflect.Descriptor instead.
func (*AddIdPResponse) Descriptor() ([]byte, []int) {
	return file_proto_sso_v1_idp_management_service_proto_rawDescGZIP(), []int{3}
}

func (x *AddIdPResponse) GetIdp() *IdentityProviderProto {
	if x != nil {
		return x.Idp
	}
	return nil
}

// --- GetIdP ---
type GetIdPRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // ID of the IdP configuration
}

func (x *GetIdPRequest) Reset() {
	*x = GetIdPRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sso_v1_idp_management_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIdPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIdPRequest) ProtoMessage() {}

func (x *GetIdPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sso_v1_idp_management_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIdPRequest.ProtoReflect.Descriptor instead.
func (*GetIdPRequest) Descriptor() ([]byte, []int) {
	return file_proto_sso_v1_idp_management_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetIdPRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetIdPResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Idp *IdentityProviderProto `protobuf:"bytes,1,opt,name=idp,proto3" json:"idp,omitempty"` // Secret should be omitted by server logic
}

func (x *GetIdPResponse) Reset() {
	*x = GetIdPResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sso_v1_idp_management_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIdPResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIdPResponse) ProtoMessage() {}

func (x *GetIdPResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sso_v1_idp_management_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIdPResponse.ProtoReflect.Descriptor instead.
func (*GetIdPResponse) Descriptor() ([]byte, []int) {
	return file_proto_sso_v1_idp_management_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetIdPResponse) GetIdp() *IdentityProviderProto {
	if x != nil {
		return x.Idp
	}
	return nil
}

// --- ListIdPs ---
type ListIdPsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OnlyEnabled bool `protobuf:"varint,1,opt,name=only_enabled,json=onlyEnabled,proto3" json:"only_enabled,omitempty"` // Option to list only enabled IdPs
}

func (x *ListIdPsRequest) Reset() {
	*x = ListIdPsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sso_v1_idp_management_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListIdPsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIdPsRequest) ProtoMessage() {}

func (x *ListIdPsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sso_v1_idp_management_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIdPsRequest.ProtoReflect.Descriptor instead.
func (*ListIdPsRequest) Descriptor() ([]byte, []int) {
	return file_proto_sso_v1_idp_management_service_proto_rawDescGZIP(), []int{6}
}

func (x *ListIdPsRequest) GetOnlyEnabled() bool {
	if x != nil {
		return x.OnlyEnabled
	}
	return false
}

type ListIdPsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Idps []*IdentityProviderProto `protobuf:"bytes,1,rep,name=idps,proto3" json:"idps,omitempty"` // Secrets should be omitted by server logic
}

func (x *ListIdPsResponse) Reset() {
	*x = ListIdPsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sso_v1_idp_management_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListIdPsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIdPsResponse) ProtoMessage() {}

func (x *ListIdPsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sso_v1_idp_management_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIdPsResponse.ProtoReflect.Descriptor instead.
func (*ListIdPsResponse) Descriptor() ([]byte, []int) {
	return file_proto_sso_v1_idp_management_service_proto_rawDescGZIP(), []int{7}
}

func (x *ListIdPsResponse) GetIdps() []*IdentityProviderProto {
	if x != nil {
		return x.Idps
	}
	return nil
}

// --- UpdateIdP ---
type UpdateIdPRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // Required to identify IdP to update
	// Fields to update. Use google.protobuf.FieldMask for partial updates.
	// For simplicity, include all modifiable fields. Server updates provided fields.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Type is usually not updatable.
	IsEnabled         bool                     `protobuf:"varint,3,opt,name=is_enabled,json=isEnabled,proto3" json:"is_enabled,omitempty"`
	OidcClientId      *string                  `protobuf:"bytes,4,opt,name=oidc_client_id,json=oidcClientId,proto3,oneof" json:"oidc_client_id,omitempty"`
	OidcClientSecret  *string                  `protobuf:"bytes,5,opt,name=oidc_client_secret,json=oidcClientSecret,proto3,oneof" json:"oidc_client_secret,omitempty"` // Allow updating secret
	OidcIssuerUrl     *string                  `protobuf:"bytes,6,opt,name=oidc_issuer_url,json=oidcIssuerUrl,proto3,oneof" json:"oidc_issuer_url,omitempty"`
	OidcScopes        []string                 `protobuf:"bytes,7,rep,name=oidc_scopes,json=oidcScopes,proto3" json:"oidc_scopes,omitempty"`
	AttributeMappings []*AttributeMappingProto `protobuf:"bytes,8,rep,name=attribute_mappings,json=attributeMappings,proto3" json:"attribute_mappings,omitempty"`
}

func (x *UpdateIdPRequest) Reset() {
	*x = UpdateIdPRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sso_v1_idp_management_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateIdPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIdPRequest) ProtoMessage() {}

func (x *UpdateIdPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sso_v1_idp_management_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIdPRequest.ProtoReflect.Descriptor instead.
func (*UpdateIdPRequest) Descriptor() ([]byte, []int) {
	return file_proto_sso_v1_idp_management_service_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateIdPRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateIdPRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateIdPRequest) GetIsEnabled() bool {
	if x != nil {
		return x.IsEnabled
	}
	return false
}

func (x *UpdateIdPRequest) GetOidcClientId() string {
	if x != nil && x.OidcClientId != nil {
		return *x.OidcClientId
	}
	return ""
}

func (x *UpdateIdPRequest) GetOidcClientSecret() string {
	if x != nil && x.OidcClientSecret != nil {
		return *x.OidcClientSecret
	}
	return ""
}

func (x *UpdateIdPRequest) GetOidcIssuerUrl() string {
	if x != nil && x.OidcIssuerUrl != nil {
		return *x.OidcIssuerUrl
	}
	return ""
}

func (x *UpdateIdPRequest) GetOidcScopes() []string {
	if x != nil {
		return x.OidcScopes
	}
	return nil
}

func (x *UpdateIdPRequest) GetAttributeMappings() []*AttributeMappingProto {
	if x != nil {
		return x.AttributeMappings
	}
	return nil
}

type UpdateIdPResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Idp *IdentityProviderProto `protobuf:"bytes,1,opt,name=idp,proto3" json:"idp,omitempty"` // Updated IdP, secret omitted by server logic
}

func (x *UpdateIdPResponse) Reset() {
	*x = UpdateIdPResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sso_v1_idp_management_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateIdPResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateIdPResponse) ProtoMessage() {}

func (x *UpdateIdPResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sso_v1_idp_management_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateIdPResponse.ProtoReflect.Descriptor instead.
func (*UpdateIdPResponse) Descriptor() ([]byte, []int) {
	return file_proto_sso_v1_idp_management_service_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateIdPResponse) GetIdp() *IdentityProviderProto {
	if x != nil {
		return x.Idp
	}
	return nil
}

// --- DeleteIdP ---
type DeleteIdPRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // ID of the IdP configuration to delete
}

func (x *DeleteIdPRequest) Reset() {
	*x = DeleteIdPRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_sso_v1_idp_management_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteIdPRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteIdPRequest) ProtoMessage() {}

func (x *DeleteIdPRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_sso_v1_idp_management_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteIdPRequest.ProtoReflect.Descriptor instead.
func (*DeleteIdPRequest) Descriptor() ([]byte, []int) {
	return file_proto_sso_v1_idp_management_service_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteIdPRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

var File_proto_sso_v1_idp_management_service_proto protoreflect.FileDescriptor

var file_proto_sso_v1_idp_management_service_proto_rawDesc = []byte{
	0x0a, 0x29, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x73, 0x6f, 0x2f, 0x76, 0x31, 0x2f, 0x69,
	0x64, 0x70, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x73, 0x73, 0x6f,
	0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x81, 0x01, 0x0a, 0x15, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4d,
	0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x36, 0x0a, 0x17, 0x65,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x65, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x55, 0x73, 0x65, 0x72, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x22, 0xe5, 0x03, 0x0a, 0x15, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x14, 0x2e, 0x73, 0x73, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x50, 0x54, 0x79,
	0x70, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x0e,
	0x6f, 0x69, 0x64, 0x63, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x69, 0x64, 0x63, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x6f, 0x69, 0x64, 0x63, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x6f, 0x69, 0x64, 0x63, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x12, 0x26, 0x0a, 0x0f, 0x6f, 0x69, 0x64, 0x63, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x69, 0x64, 0x63, 0x49,
	0x73, 0x73, 0x75, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x69, 0x64, 0x63,
	0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6f,
	0x69, 0x64, 0x63, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x12, 0x4c, 0x0a, 0x12, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x18,
	0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x73, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x52, 0x11, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4d,
	0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xa4, 0x03,
	0x0a, 0x0d, 0x41, 0x64, 0x64, 0x49, 0x64, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x14, 0x2e, 0x73, 0x73, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x50, 0x54, 0x79,
	0x70, 0x65, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x0e,
	0x6f, 0x69, 0x64, 0x63, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x6f, 0x69, 0x64, 0x63, 0x43, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x12, 0x6f, 0x69, 0x64, 0x63, 0x5f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x10, 0x6f, 0x69, 0x64, 0x63, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0f, 0x6f, 0x69,
	0x64, 0x63, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0d, 0x6f, 0x69, 0x64, 0x63, 0x49, 0x73, 0x73, 0x75, 0x65,
	0x72, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x69, 0x64, 0x63, 0x5f,
	0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x69,
	0x64, 0x63, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x12, 0x4c, 0x0a, 0x12, 0x61, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x73, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x52, 0x11, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4d, 0x61,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x6f, 0x69, 0x64, 0x63, 0x5f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x6f, 0x69,
	0x64, 0x63, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x42, 0x12, 0x0a, 0x10, 0x5f, 0x6f, 0x69, 0x64, 0x63, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72,
	0x5f, 0x75, 0x72, 0x6c, 0x22, 0x41, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x49, 0x64, 0x50, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x03, 0x69, 0x64, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x73, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x52, 0x03, 0x69, 0x64, 0x70, 0x22, 0x1f, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x49, 0x64,
	0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x41, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x49,
	0x64, 0x50, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x03, 0x69, 0x64,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x73, 0x6f, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x03, 0x69, 0x64, 0x70, 0x22, 0x34, 0x0a, 0x0f, 0x4c,
	0x69, 0x73, 0x74, 0x49, 0x64, 0x50, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21,
	0x0a, 0x0c, 0x6f, 0x6e, 0x6c, 0x79, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x6f, 0x6e, 0x6c, 0x79, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x22, 0x45, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x50, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x69, 0x64, 0x70, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x73, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x52, 0x04, 0x69, 0x64, 0x70, 0x73, 0x22, 0x8d, 0x03, 0x0a, 0x10, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x49, 0x64, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x12, 0x29, 0x0a, 0x0e, 0x6f, 0x69, 0x64, 0x63, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0c, 0x6f, 0x69, 0x64, 0x63,
	0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x12, 0x6f,
	0x69, 0x64, 0x63, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x10, 0x6f, 0x69, 0x64, 0x63, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2b,
	0x0a, 0x0f, 0x6f, 0x69, 0x64, 0x63, 0x5f, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0d, 0x6f, 0x69, 0x64, 0x63, 0x49,
	0x73, 0x73, 0x75, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x0b, 0x6f,
	0x69, 0x64, 0x63, 0x5f, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0a, 0x6f, 0x69, 0x64, 0x63, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x73, 0x12, 0x4c, 0x0a, 0x12,
	0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x73, 0x6f, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x4d, 0x61, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x11, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x6f,
	0x69, 0x64, 0x63, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x15, 0x0a,
	0x13, 0x5f, 0x6f, 0x69, 0x64, 0x63, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x42, 0x12, 0x0a, 0x10, 0x5f, 0x6f, 0x69, 0x64, 0x63, 0x5f, 0x69, 0x73,
	0x73, 0x75, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x22, 0x44, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x64, 0x50, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a,
	0x03, 0x69, 0x64, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x73, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x03, 0x69, 0x64, 0x70, 0x22, 0x22,
	0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x64, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x2a, 0x4e, 0x0a, 0x0c, 0x49, 0x64, 0x50, 0x54, 0x79, 0x70, 0x65, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x18, 0x0a, 0x14, 0x49, 0x44, 0x50, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d,
	0x49, 0x44, 0x50, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4f, 0x49, 0x44, 0x43, 0x10, 0x01, 0x12,
	0x11, 0x0a, 0x0d, 0x49, 0x44, 0x50, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x41, 0x4d, 0x4c,
	0x10, 0x02, 0x32, 0xc8, 0x02, 0x0a, 0x14, 0x49, 0x64, 0x50, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x41,
	0x64, 0x64, 0x49, 0x64, 0x50, 0x12, 0x15, 0x2e, 0x73, 0x73, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x41,
	0x64, 0x64, 0x49, 0x64, 0x50, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x73,
	0x73, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x49, 0x64, 0x50, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x47, 0x65, 0x74, 0x49, 0x64, 0x50, 0x12, 0x15,
	0x2e, 0x73, 0x73, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x64, 0x50, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x73, 0x73, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x49, 0x64, 0x50, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a,
	0x08, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x50, 0x73, 0x12, 0x17, 0x2e, 0x73, 0x73, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x50, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x18, 0x2e, 0x73, 0x73, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x49, 0x64, 0x50, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x09,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x64, 0x50, 0x12, 0x18, 0x2e, 0x73, 0x73, 0x6f, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x64, 0x50, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x73, 0x73, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x49, 0x64, 0x50, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d,
	0x0a, 0x09, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x64, 0x50, 0x12, 0x18, 0x2e, 0x73, 0x73,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x49, 0x64, 0x50, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x38, 0x5a,
	0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x69, 0x6c, 0x61,
	0x62, 0x2d, 0x64, 0x65, 0x76, 0x2f, 0x73, 0x68, 0x61, 0x64, 0x6f, 0x77, 0x2d, 0x73, 0x73, 0x6f,
	0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x73, 0x6f, 0x2f, 0x76,
	0x31, 0x3b, 0x73, 0x73, 0x6f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_sso_v1_idp_management_service_proto_rawDescOnce sync.Once
	file_proto_sso_v1_idp_management_service_proto_rawDescData = file_proto_sso_v1_idp_management_service_proto_rawDesc
)

func file_proto_sso_v1_idp_management_service_proto_rawDescGZIP() []byte {
	file_proto_sso_v1_idp_management_service_proto_rawDescOnce.Do(func() {
		file_proto_sso_v1_idp_management_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_sso_v1_idp_management_service_proto_rawDescData)
	})
	return file_proto_sso_v1_idp_management_service_proto_rawDescData
}

var file_proto_sso_v1_idp_management_service_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_sso_v1_idp_management_service_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_proto_sso_v1_idp_management_service_proto_goTypes = []interface{}{
	(IdPTypeProto)(0),             // 0: sso.v1.IdPTypeProto
	(*AttributeMappingProto)(nil), // 1: sso.v1.AttributeMappingProto
	(*IdentityProviderProto)(nil), // 2: sso.v1.IdentityProviderProto
	(*AddIdPRequest)(nil),         // 3: sso.v1.AddIdPRequest
	(*AddIdPResponse)(nil),        // 4: sso.v1.AddIdPResponse
	(*GetIdPRequest)(nil),         // 5: sso.v1.GetIdPRequest
	(*GetIdPResponse)(nil),        // 6: sso.v1.GetIdPResponse
	(*ListIdPsRequest)(nil),       // 7: sso.v1.ListIdPsRequest
	(*ListIdPsResponse)(nil),      // 8: sso.v1.ListIdPsResponse
	(*UpdateIdPRequest)(nil),      // 9: sso.v1.UpdateIdPRequest
	(*UpdateIdPResponse)(nil),     // 10: sso.v1.UpdateIdPResponse
	(*DeleteIdPRequest)(nil),      // 11: sso.v1.DeleteIdPRequest
	(*timestamppb.Timestamp)(nil), // 12: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),         // 13: google.protobuf.Empty
}
var file_proto_sso_v1_idp_management_service_proto_depIdxs = []int32{
	0,  // 0: sso.v1.IdentityProviderProto.type:type_name -> sso.v1.IdPTypeProto
	1,  // 1: sso.v1.IdentityProviderProto.attribute_mappings:type_name -> sso.v1.AttributeMappingProto
	12, // 2: sso.v1.IdentityProviderProto.created_at:type_name -> google.protobuf.Timestamp
	12, // 3: sso.v1.IdentityProviderProto.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 4: sso.v1.AddIdPRequest.type:type_name -> sso.v1.IdPTypeProto
	1,  // 5: sso.v1.AddIdPRequest.attribute_mappings:type_name -> sso.v1.AttributeMappingProto
	2,  // 6: sso.v1.AddIdPResponse.idp:type_name -> sso.v1.IdentityProviderProto
	2,  // 7: sso.v1.GetIdPResponse.idp:type_name -> sso.v1.IdentityProviderProto
	2,  // 8: sso.v1.ListIdPsResponse.idps:type_name -> sso.v1.IdentityProviderProto
	1,  // 9: sso.v1.UpdateIdPRequest.attribute_mappings:type_name -> sso.v1.AttributeMappingProto
	2,  // 10: sso.v1.UpdateIdPResponse.idp:type_name -> sso.v1.IdentityProviderProto
	3,  // 11: sso.v1.IdPManagementService.AddIdP:input_type -> sso.v1.AddIdPRequest
	5,  // 12: sso.v1.IdPManagementService.GetIdP:input_type -> sso.v1.GetIdPRequest
	7,  // 13: sso.v1.IdPManagementService.ListIdPs:input_type -> sso.v1.ListIdPsRequest
	9,  // 14: sso.v1.IdPManagementService.UpdateIdP:input_type -> sso.v1.UpdateIdPRequest
	11, // 15: sso.v1.IdPManagementService.DeleteIdP:input_type -> sso.v1.DeleteIdPRequest
	4,  // 16: sso.v1.IdPManagementService.AddIdP:output_type -> sso.v1.AddIdPResponse
	6,  // 17: sso.v1.IdPManagementService.GetIdP:output_type -> sso.v1.GetIdPResponse
	8,  // 18: sso.v1.IdPManagementService.ListIdPs:output_type -> sso.v1.ListIdPsResponse
	10, // 19: sso.v1.IdPManagementService.UpdateIdP:output_type -> sso.v1.UpdateIdPResponse
	13, // 20: sso.v1.IdPManagementService.DeleteIdP:output_type -> google.protobuf.Empty
	16, // [16:21] is the sub-list for method output_type
	11, // [11:16] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_proto_sso_v1_idp_management_service_proto_init() }
func file_proto_sso_v1_idp_management_service_proto_init() {
	if File_proto_sso_v1_idp_management_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_sso_v1_idp_management_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AttributeMappingProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sso_v1_idp_management_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdentityProviderProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sso_v1_idp_management_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddIdPRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sso_v1_idp_management_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddIdPResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sso_v1_idp_management_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIdPRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sso_v1_idp_management_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIdPResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sso_v1_idp_management_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListIdPsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sso_v1_idp_management_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListIdPsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sso_v1_idp_management_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateIdPRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sso_v1_idp_management_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateIdPResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_sso_v1_idp_management_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteIdPRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_sso_v1_idp_management_service_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_proto_sso_v1_idp_management_service_proto_msgTypes[8].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_sso_v1_idp_management_service_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_sso_v1_idp_management_service_proto_goTypes,
		DependencyIndexes: file_proto_sso_v1_idp_management_service_proto_depIdxs,
		EnumInfos:         file_proto_sso_v1_idp_management_service_proto_enumTypes,
		MessageInfos:      file_proto_sso_v1_idp_management_service_proto_msgTypes,
	}.Build()
	File_proto_sso_v1_idp_management_service_proto = out.File
	file_proto_sso_v1_idp_management_service_proto_rawDesc = nil
	file_proto_sso_v1_idp_management_service_proto_goTypes = nil
	file_proto_sso_v1_idp_management_service_proto_depIdxs = nil
}
